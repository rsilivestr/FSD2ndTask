mixin inputDrop(type, placeholder, forceOpen)
  .dropdown(
    class = `dropdown--type_${type}`,
    class = forceOpen ? 'dropdown--force-open' : ''
  )&attributes(attributes)
    input(type='text' readonly placeholder=placeholder).dropdown__display.input-box__input
    .dropdown__contents(class = forceOpen ? 'dropdown__contents--force-visible' : '')
      block
      if(type=='single')
        +dropButtons

mixin dropOption(name, nameSingle, nameFew, nameMany, min=0, max, val)
  .dropdown__option(
    data-min= min,
    data-max= max,
    data-single = nameSingle,
    data-few = nameFew,
    data-many = nameMany)
    span.dropdown__option-name= name
    button.dropdown__option-control.dropdown__option-control--subtract.dropdown__option-control--disabled -
    span.dropdown__option-value= val ? val : min
    button.dropdown__option-control.dropdown__option-control--add +

mixin dropButtons
  button.dropdown__btn.dropdown__btn--clear.button.button--style_text.button--size_auto.hidden очистить
  button.dropdown__btn.dropdown__btn--apply.button.button--style_text.button--size_auto применить
