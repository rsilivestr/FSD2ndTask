-
  const PAGINATION_DEFAULT_CONTENT = {
    controls: {
      left: false,
      right: true,
    },
    pagesLeft: [
      { number: 1, url: '#page-url', active: true },
      { number: 2, url: '#page-url' },
      { number: 3, url: '#page-url' },
    ],
    gapText: '...',
    pagesRight: [{ number: 15, url: '#page-url' }],
    resultsRange: [1, 12],
    resultsTotal: '100+',
  }

mixin pagination(data = {})
  -
    const controls = data.controls || PAGINATION_DEFAULT_CONTENT.controls;
    const pagesLeft = data.pagesLeft || PAGINATION_DEFAULT_CONTENT.pagesLeft;
    const gapText = data.gapText || PAGINATION_DEFAULT_CONTENT.gapText;
    const pagesRight = data.pagesRight || PAGINATION_DEFAULT_CONTENT.pagesRight;
    const resultsRange = data.resultsRange || PAGINATION_DEFAULT_CONTENT.resultsRange;
    const resultsTotal = data.resultsTotal || PAGINATION_DEFAULT_CONTENT.resultsTotal;

  .pagination
    button(class = controls.left ? '' : 'pagination__control--hidden').pagination__control
      i.material-icons arrow_back
    each link in pagesLeft
      a(href = link.url class = link.active ? 'pagination__link--active' : '').pagination__link= link.number
    span.pagination__gap= gapText
    each link in pagesRight
      a(href = link.url class = link.active ? 'pagination__link--active' : '').pagination__link= link.number
    button(class = controls.right ? '' : 'pagination__control--hidden').pagination__control
      i.material-icons arrow_forward
    p.pagination__tooltip= `${resultsRange[0]} – ${resultsRange[1]} из ${resultsTotal} вариантов аренды`
